//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LanguageParser.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface ILanguageParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilation_unit([NotNull] LanguageParser.Compilation_unitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.namespace_or_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace_or_type_name([NotNull] LanguageParser.Namespace_or_type_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_([NotNull] LanguageParser.Type_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.base_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBase_type([NotNull] LanguageParser.Base_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.tuple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTuple_type([NotNull] LanguageParser.Tuple_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.tuple_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTuple_element([NotNull] LanguageParser.Tuple_elementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_type([NotNull] LanguageParser.Simple_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumeric_type([NotNull] LanguageParser.Numeric_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegral_type([NotNull] LanguageParser.Integral_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloating_point_type([NotNull] LanguageParser.Floating_point_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_type([NotNull] LanguageParser.Class_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_argument_list([NotNull] LanguageParser.Type_argument_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_list([NotNull] LanguageParser.Argument_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] LanguageParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] LanguageParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.non_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNon_assignment_expression([NotNull] LanguageParser.Non_assignment_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] LanguageParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment_operator([NotNull] LanguageParser.Assignment_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_expression([NotNull] LanguageParser.Conditional_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.null_coalescing_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNull_coalescing_expression([NotNull] LanguageParser.Null_coalescing_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.conditional_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_or_expression([NotNull] LanguageParser.Conditional_or_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.conditional_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_and_expression([NotNull] LanguageParser.Conditional_and_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.inclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclusive_or_expression([NotNull] LanguageParser.Inclusive_or_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.exclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExclusive_or_expression([NotNull] LanguageParser.Exclusive_or_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd_expression([NotNull] LanguageParser.And_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality_expression([NotNull] LanguageParser.Equality_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelational_expression([NotNull] LanguageParser.Relational_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShift_expression([NotNull] LanguageParser.Shift_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditive_expression([NotNull] LanguageParser.Additive_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicative_expression([NotNull] LanguageParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.switch_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_expression([NotNull] LanguageParser.Switch_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.range_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRange_expression([NotNull] LanguageParser.Range_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_expression([NotNull] LanguageParser.Unary_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.cast_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCast_expression([NotNull] LanguageParser.Cast_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_expression([NotNull] LanguageParser.Primary_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] LanguageParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleNameExpression([NotNull] LanguageParser.SimpleNameExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesisExpressions([NotNull] LanguageParser.ParenthesisExpressionsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccessExpression([NotNull] LanguageParser.MemberAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalAccessExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralAccessExpression([NotNull] LanguageParser.LiteralAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisReferenceExpression([NotNull] LanguageParser.ThisReferenceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>objectCreationExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectCreationExpression([NotNull] LanguageParser.ObjectCreationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tupleExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleExpression([NotNull] LanguageParser.TupleExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeofExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofExpression([NotNull] LanguageParser.TypeofExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>anonymousMethodExpression</c>
	/// labeled alternative in <see cref="LanguageParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymousMethodExpression([NotNull] LanguageParser.AnonymousMethodExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.throwable_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowable_expression([NotNull] LanguageParser.Throwable_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.throw_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrow_expression([NotNull] LanguageParser.Throw_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_access([NotNull] LanguageParser.Member_accessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.bracket_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracket_expression([NotNull] LanguageParser.Bracket_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.indexer_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexer_argument([NotNull] LanguageParser.Indexer_argumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefined_type([NotNull] LanguageParser.Predefined_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_list([NotNull] LanguageParser.Expression_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.object_or_collection_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject_or_collection_initializer([NotNull] LanguageParser.Object_or_collection_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.object_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject_initializer([NotNull] LanguageParser.Object_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.member_initializer_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_initializer_list([NotNull] LanguageParser.Member_initializer_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.member_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_initializer([NotNull] LanguageParser.Member_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.initializer_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer_value([NotNull] LanguageParser.Initializer_valueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.collection_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCollection_initializer([NotNull] LanguageParser.Collection_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.element_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElement_initializer([NotNull] LanguageParser.Element_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.anonymous_object_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_object_initializer([NotNull] LanguageParser.Anonymous_object_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.member_declarator_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_declarator_list([NotNull] LanguageParser.Member_declarator_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.member_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_declarator([NotNull] LanguageParser.Member_declaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.unbound_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnbound_type_name([NotNull] LanguageParser.Unbound_type_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.generic_dimension_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneric_dimension_specifier([NotNull] LanguageParser.Generic_dimension_specifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.lambda_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambda_expression([NotNull] LanguageParser.Lambda_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.anonymous_function_signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_function_signature([NotNull] LanguageParser.Anonymous_function_signatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.explicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicit_anonymous_function_parameter_list([NotNull] LanguageParser.Explicit_anonymous_function_parameter_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.explicit_anonymous_function_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicit_anonymous_function_parameter([NotNull] LanguageParser.Explicit_anonymous_function_parameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.implicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicit_anonymous_function_parameter_list([NotNull] LanguageParser.Implicit_anonymous_function_parameter_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.anonymous_function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_function_body([NotNull] LanguageParser.Anonymous_function_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] LanguageParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationStatement([NotNull] LanguageParser.DeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_function_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_function_declaration([NotNull] LanguageParser.Local_function_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_function_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_function_modifiers([NotNull] LanguageParser.Local_function_modifiersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_function_body([NotNull] LanguageParser.Local_function_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.labeled_Statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabeled_Statement([NotNull] LanguageParser.Labeled_StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmbedded_statement([NotNull] LanguageParser.Embedded_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>theEmptyStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTheEmptyStatement([NotNull] LanguageParser.TheEmptyStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] LanguageParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] LanguageParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] LanguageParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] LanguageParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachStatement([NotNull] LanguageParser.ForeachStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] LanguageParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] LanguageParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] LanguageParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStatement([NotNull] LanguageParser.ThrowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tryStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryStatement([NotNull] LanguageParser.TryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>usingStatement</c>
	/// labeled alternative in <see cref="LanguageParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingStatement([NotNull] LanguageParser.UsingStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] LanguageParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_declaration([NotNull] LanguageParser.Local_variable_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_type([NotNull] LanguageParser.Local_variable_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_declarator([NotNull] LanguageParser.Local_variable_declaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.local_variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_initializer([NotNull] LanguageParser.Local_variable_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.if_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_body([NotNull] LanguageParser.If_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement_list([NotNull] LanguageParser.Statement_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.for_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_initializer([NotNull] LanguageParser.For_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.for_iterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_iterator([NotNull] LanguageParser.For_iteratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.catch_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatch_clauses([NotNull] LanguageParser.Catch_clausesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.specific_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecific_catch_clause([NotNull] LanguageParser.Specific_catch_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.general_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneral_catch_clause([NotNull] LanguageParser.General_catch_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.finally_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinally_clause([NotNull] LanguageParser.Finally_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.resource_acquisition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResource_acquisition([NotNull] LanguageParser.Resource_acquisitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.using_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsing_directives([NotNull] LanguageParser.Using_directivesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>usingAliasDirective</c>
	/// labeled alternative in <see cref="LanguageParser.using_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingAliasDirective([NotNull] LanguageParser.UsingAliasDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>usingNamespaceDirective</c>
	/// labeled alternative in <see cref="LanguageParser.using_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingNamespaceDirective([NotNull] LanguageParser.UsingNamespaceDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.qualified_alias_member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualified_alias_member([NotNull] LanguageParser.Qualified_alias_memberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_list([NotNull] LanguageParser.Type_parameter_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter([NotNull] LanguageParser.Type_parameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_parameter_constraints_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_constraints_clauses([NotNull] LanguageParser.Type_parameter_constraints_clausesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_parameter_constraints_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_constraints_clause([NotNull] LanguageParser.Type_parameter_constraints_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.type_parameter_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_constraints([NotNull] LanguageParser.Type_parameter_constraintsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.primary_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_constraint([NotNull] LanguageParser.Primary_constraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.secondary_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSecondary_constraints([NotNull] LanguageParser.Secondary_constraintsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.constructor_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructor_constraint([NotNull] LanguageParser.Constructor_constraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_initializer([NotNull] LanguageParser.Variable_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.return_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_type([NotNull] LanguageParser.Return_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.formal_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormal_parameter_list([NotNull] LanguageParser.Formal_parameter_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.fixed_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixed_parameters([NotNull] LanguageParser.Fixed_parametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.fixed_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixed_parameter([NotNull] LanguageParser.Fixed_parameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.rank_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRank_specifier([NotNull] LanguageParser.Rank_specifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.array_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray_initializer([NotNull] LanguageParser.Array_initializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttributes([NotNull] LanguageParser.AttributesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_section([NotNull] LanguageParser.Attribute_sectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_target([NotNull] LanguageParser.Attribute_targetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.attribute_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_list([NotNull] LanguageParser.Attribute_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] LanguageParser.AttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.attribute_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_argument([NotNull] LanguageParser.Attribute_argumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.right_arrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRight_arrow([NotNull] LanguageParser.Right_arrowContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.right_shift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRight_shift([NotNull] LanguageParser.Right_shiftContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.right_shift_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRight_shift_assignment([NotNull] LanguageParser.Right_shift_assignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] LanguageParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean_literal([NotNull] LanguageParser.Boolean_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.string_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString_literal([NotNull] LanguageParser.String_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.interpolated_regular_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_regular_string([NotNull] LanguageParser.Interpolated_regular_stringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.interpolated_verbatium_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_verbatium_string([NotNull] LanguageParser.Interpolated_verbatium_stringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.interpolated_regular_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_regular_string_part([NotNull] LanguageParser.Interpolated_regular_string_partContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.interpolated_verbatium_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_verbatium_string_part([NotNull] LanguageParser.Interpolated_verbatium_string_partContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.interpolated_string_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_string_expression([NotNull] LanguageParser.Interpolated_string_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] LanguageParser.KeywordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.arg_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArg_declaration([NotNull] LanguageParser.Arg_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.method_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_invocation([NotNull] LanguageParser.Method_invocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.object_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject_creation_expression([NotNull] LanguageParser.Object_creation_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] LanguageParser.IdentifierContext context);
}
